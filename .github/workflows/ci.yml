on: [push, pull_request]

name: CI

jobs:
  commitlint:
    name: Run Conventional Commit lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5

  clippy:
    name: Run clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: cargo, rustfmt, clippy
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: cargo, rustfmt, clippy
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  format:
    name: Check format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: cargo, rustfmt, clippy
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  deploy:
    name: Deploy
    needs: [commitlint, clippy, test, format]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Sets env for production deployment
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DEPLOY_ENVIRONMENT=production" >> $GITHUB_ENV
      - name: Sets env for staging deployment
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "DEPLOY_ENVIRONMENT=staging" >> $GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: cargo, rustfmt, clippy
          override: true
      - name: Add ~/.cargo/bin to PATH
        run: echo $(readlink --canonicalize ~/.cargo/bin) >> $GITHUB_PATH
      - name: Install wrangler
        run: npm install wrangler
      - name: Publish ${{ env.DEPLOY_ENVIRONMENT }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          npx wrangler publish --env ${{ env.DEPLOY_ENVIRONMENT }}
